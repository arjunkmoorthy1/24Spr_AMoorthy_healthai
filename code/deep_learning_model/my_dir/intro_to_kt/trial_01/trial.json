{"trial_id": "01", "hyperparameters": {"space": [{"class_name": "Float", "config": {"name": "dropout_rate", "default": 0.2, "conditions": [], "min_value": 0.2, "max_value": 0.5, "step": 0.1, "sampling": "linear"}}, {"class_name": "Float", "config": {"name": "l2_reg", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Float", "config": {"name": "learning_rate", "default": 0.0001, "conditions": [], "min_value": 0.0001, "max_value": 0.01, "step": null, "sampling": "log"}}, {"class_name": "Choice", "config": {"name": "loss_function", "default": "binary_crossentropy", "conditions": [], "values": ["binary_crossentropy", "hinge"], "ordered": false}}], "values": {"dropout_rate": 0.4, "l2_reg": 0.009971878258105844, "learning_rate": 0.008501519268424304, "loss_function": "hinge"}}, "metrics": {"metrics": {}}, "score": null, "best_step": 0, "status": "FAILED", "message": "Traceback (most recent call last):\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 274, in _try_run_and_update_trial\n    self._run_and_update_trial(trial, *fit_args, **fit_kwargs)\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras_tuner/src/engine/base_tuner.py\", line 239, in _run_and_update_trial\n    results = self.run_trial(trial, *fit_args, **fit_kwargs)\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 314, in run_trial\n    obj_value = self._build_and_fit_model(trial, *args, **copied_kwargs)\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 232, in _build_and_fit_model\n    model = self._try_build(hp)\n            ^^^^^^^^^^^^^^^^^^^\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 164, in _try_build\n    model = self._build_hypermodel(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras_tuner/src/engine/tuner.py\", line 155, in _build_hypermodel\n    model = self.hypermodel.build(hp)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/var/folders/kq/j6d8h1bx4z5cv8c9hc3hv6yw0000gn/T/ipykernel_27085/4036407478.py\", line 11, in build_model\n    base_model = ResNet50(input_shape=input_shape, include_top=False, weights='imagenet')\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras/src/applications/resnet.py\", line 406, in ResNet50\n    return ResNet(\n           ^^^^^^^\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras/src/applications/resnet.py\", line 125, in ResNet\n    input_shape = imagenet_utils.obtain_input_shape(\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"/Users/arjunmoorthy/miniconda3/envs/torch/lib/python3.11/site-packages/keras/src/applications/imagenet_utils.py\", line 383, in obtain_input_shape\n    raise ValueError(\nValueError: The input must have 3 channels; Received `input_shape=(256, 256, 1)`\n"}